{"version":3,"sources":["components/fixed/Footer.js","components/fixed/Navigation.js","components/daydo/DaydoItem.js","components/daydo/DaydoItemList.js","components/daydo/DaydoForm.js","components/daydo/DaydoSlider.js","components/daydo/DaydoListTemplate.js","components/preference/Preference.js","components/PreferenceWrapper.jsx","components/todo/TodoForm.js","components/todo/TodoItem.js","components/todo/TodoItemList.js","components/todo/TodoListTemplate.js","components/TodayWrapper.jsx","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","Navigation","userInfo","id","to","src","pictureUrl","alt","name","DaydoItem","content","onRemove","onChange","type","value","e","onClick","stopPropagation","DaydoItemList","daydoListHTML","day","daydoList","dayHTML","length","map","DaydoForm","onCreate","onKeyPress","placeholder","DaydoSlider","onSlide","DayDoListTemplate","idToken","darkTheme","today","Date","useState","allDaydoItemList","setAllDaydoItemList","daydoItemList","setDaydoItemList","formInput","setFormInput","fetched","setFetched","getDay","setDay","handleCreate","newDaydoItem","token","fetch","method","headers","body","JSON","stringify","then","response","json","console","log","useEffect","inputs","document","querySelectorAll","forEach","input","classList","add","remove","items","defaultDaydoItemList","filter","daydoItem","target","updatedDaydoItemList","deletedId","index","findIndex","selectedItem","updatedId","key","Preference","onToggle","checked","style","color","border","width","marginTop","PreferenceWrapper","handleThemeToggle","fontSize","TodoForm","TodoItem","isDone","htmlFor","TodoItemList","todoListHTML","todoList","TodoListTemplate","todoItemList","setTodoItemList","newTodoItem","updatedTodoItemList","todoItem","TodayWrapper","todayDateHTML","App","getMonth","getDate","setDarkTheme","querySelector","navigation","footer","isPatched","setIsPatched","setUserInfo","cookie","split","find","row","startsWith","newUserInfo","basename","path","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d0911ef8.chunk.js","sourcesContent":["import './Footer.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p>ⓒ 2021 Kevin.P, All rights reserved.</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = ({ userInfo }) => {\r\n    return (\r\n        <nav className=\"navigation\">\r\n            <ul className=\"navigation-list\">\r\n                <li id=\"logo\">&pi;</li>\r\n                <li><Link to=\"/\">할일</Link></li>\r\n                <li><Link to=\"/preference\">설정</Link></li>\r\n                <li>\r\n                    <div className=\"navigation-user-info\">\r\n                        <img className=\"navigation-user_picture\" src={userInfo.pictureUrl} alt={userInfo.name}></img>\r\n                        <span className=\"navigation-user-name\">{userInfo.name}</span>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import './DaydoItem.css'\r\n\r\nconst DaydoItem = ({ id, content, onRemove, onChange}) => {\r\n    return (\r\n        <li className=\"daydo-item\">\r\n            <input type=\"text\" className={`todo-content`} value={content} onChange={(e) => { onChange(e, id) }}/>\r\n            <span className=\"remove-item\" onClick={(e) => { e.stopPropagation(); onRemove(id); }}>&times;</span>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default DaydoItem;","import DaydoItem from './DaydoItem';\r\nimport './DaydoItemList.css';\r\n\r\nconst DaydoItemList = ({ day, daydoList, onRemove, onChange }) => {\r\n    let daydoListHTML;\r\n    const dayname = ['일','월','화','수','목','금','토','일'];       \r\n    const dayHTML = dayname[day] + '요일';\r\n\r\n    if(!daydoList) {\r\n        daydoListHTML = <p>로딩중...</p>;\r\n    }\r\n    else if(daydoList.length === 0) {\r\n        daydoListHTML = <div className=\"daydo-empty-list\">{dayHTML}마다 할 일을 설정해주세요!</div>\r\n    }\r\n    else {\r\n        daydoListHTML = daydoList.map(\r\n            ({id, content}) => {\r\n                return <DaydoItem\r\n                    key={id}\r\n                    id={id}\r\n                    content={content}\r\n                    onRemove={onRemove}\r\n                    onChange={onChange}\r\n                />\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <ul className=\"todo-list-wrapper\">\r\n            {daydoListHTML}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default DaydoItemList;","import './DaydoForm.css';\r\n\r\nconst DaydoForm = ({value, onChange, onCreate, onKeyPress}) => {\r\n    return (\r\n        <div className=\"daydo-form\">\r\n            <span>+</span>   \r\n            <input type=\"text\" value={value} onChange={onChange} onKeyPress={onKeyPress} placeholder=\"할 일 적기\"/>\r\n            <button onClick={onCreate}>추가</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DaydoForm;","import './DaydoSlider.css'\r\n\r\nconst DaydoSlider = ({ day, onSlide }) => {\r\n    const dayname = ['일','월','화','수','목','금','토','일'];       \r\n    const dayHTML = dayname[day] + '요일';\r\n\r\n    \r\n    return (\r\n        <div className=\"daydo-title\">\r\n            <h2 className=\"left\" onClick={onSlide}>&#60;</h2>\r\n            <h2>{dayHTML}</h2>\r\n            <h2 className=\"right\" onClick={onSlide}>&#62;</h2>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default DaydoSlider;","import { useEffect, useState } from 'react'\r\nimport DaydoItemList from './DaydoItemList'\r\nimport DaydoForm from './DaydoForm'\r\nimport './DaydoListTemplate.css'\r\nimport DaydoSlider from './DaydoSlider'\r\n\r\nconst DayDoListTemplate = ({ idToken, darkTheme }) => {\r\n    const today = new Date();\r\n\r\n    const [ allDaydoItemList, setAllDaydoItemList ] = useState([]);\r\n    const [ daydoItemList, setDaydoItemList ] = useState([]);\r\n\r\n    const [ formInput, setFormInput ] = useState('');\r\n    const [ fetched, setFetched ] = useState(false);\r\n\r\n    const [ day, setDay ] = useState(today.getDay()); // 설정의 요일별 할 일 목록의 세팅되어 있는 요일 (기본 월요일 설정)\r\n\r\n    useEffect(() => { // 다크 모드 \r\n        console.log()\r\n        const inputs = document.querySelectorAll('input');\r\n    \r\n        if(darkTheme) {  \r\n          inputs.forEach(input => input.classList.add('dark'));\r\n        }\r\n        else {\r\n          inputs.forEach(input => input.classList.remove('dark'));\r\n        }\r\n      });\r\n      \r\n    // FETCH - POST\r\n    useEffect(() => {\r\n        // 서버로부터 모든 요일의 Daydo 목록 가져오기\r\n        if(!fetched) {\r\n            fetch('http://ec2-3-36-251-188.ap-northeast-2.compute.amazonaws.com:8080/api/daydos', {\r\n                method : 'POST',\r\n                headers : {\r\n                    'content-type' : 'application/json'\r\n                },\r\n                body : JSON.stringify(idToken)\r\n            })\r\n            .then((response) => response.json())\r\n            .then((items) => {\r\n                console.log(\"서버로부터 모든 요일별 Daydo 목록 가져옴: \", items);\r\n                setFetched(true);\r\n                setAllDaydoItemList(items);\r\n            });\r\n        }\r\n\r\n                    \r\n        // 초기로 설정되어 있는 요일에 해당하는 요일별 할 일 목록 생성\r\n        // !! Java에서 day = 1 ~ 7 : 월요일 ~ 일요일 | JavaScript에서 day = 0 ~ 6 : 일요일 ~ 토요일\r\n        const defaultDaydoItemList = allDaydoItemList.filter(daydoItem => {\r\n            if(day === 0) {\r\n                return daydoItem.day === 7;\r\n            }\r\n            else {\r\n                return daydoItem.day === day;\r\n            }\r\n        });\r\n            \r\n        setDaydoItemList(defaultDaydoItemList);\r\n    }, [fetched, allDaydoItemList, day]);\r\n\r\n    // CREATE - POST \r\n    function handleCreate() {\r\n        // Form 안의 내용을 초기화\r\n        setFormInput('');\r\n\r\n        // 서버로 보낼 객체 아이템 생성\r\n        const newDaydoItem = {\r\n            token: idToken,\r\n            content: formInput,\r\n            day: day\r\n        };\r\n        \r\n        // POST 방식으로 서버 전송\r\n        fetch('http://ec2-3-36-251-188.ap-northeast-2.compute.amazonaws.com:8080/api/daydo', {\r\n            method : 'POST',\r\n            headers: {\r\n                'content-type' : 'application/json'\r\n            },\r\n            body : JSON.stringify(newDaydoItem)\r\n        }) // 서버에서 받은 응답을 객체화 후, DaydoItemList에 추가 (컴포넌트 re-render됨)\r\n        .then((response) => response.json())\r\n        .then((newDaydoItem) => {\r\n            console.log(\"새 Todo 아이템 생성됨: \", newDaydoItem);\r\n             setDaydoItemList([...daydoItemList, newDaydoItem]);\r\n         })\r\n\r\n         // 서버에서 다시 목록 가져오기\r\n         setFetched(false);\r\n    }\r\n    \r\n    // REMOVE - DELETE\r\n    function handleRemove(id) {\r\n        // 서버와 클라이언트 따로따로 처리됨\r\n        const updatedDaydoItemList = daydoItemList.filter(daydoItem => daydoItem.id !== id);\r\n\r\n        //서버\r\n        fetch(`http://ec2-3-36-251-188.ap-northeast-2.compute.amazonaws.com:8080/api/daydo/${id}`, {\r\n            method: 'DELETE',\r\n            headers : {\r\n                'content-type' : 'application/json'\r\n            }           \r\n        })\r\n        .then((response) => response.json())\r\n        .then((deletedId) => {\r\n            console.log(\"ID:\", deletedId, \" 삭제됨\");\r\n        });\r\n\r\n        // 클라이언트\r\n        setDaydoItemList(updatedDaydoItemList);\r\n\r\n        // 서버에서 다시 목록 가져오기\r\n        setFetched(false);\r\n    }\r\n  \r\n    // UPDATE (content) - PUT\r\n    function handleDaydoInputChange(e, id) {\r\n        // 서버와 클라이언트 따로따로 처리됨\r\n        const index = daydoItemList.findIndex(daydoItem => daydoItem.id === id);\r\n        const selectedItem = daydoItemList[index];\r\n        selectedItem.content = e.target.value;\r\n\r\n        // 서버\r\n        fetch(`http://ec2-3-36-251-188.ap-northeast-2.compute.amazonaws.com:8080/api/daydo/${id}`, {\r\n            method : 'PUT',\r\n            headers : {\r\n                'content-type' : 'application/json'\r\n            },\r\n            body : JSON.stringify(selectedItem)\r\n        })\r\n        .then((response) => response.json())\r\n        .then((updatedId) => {\r\n            console.log(\"ID:\", updatedId, \" 업데이트됨\");\r\n        });\r\n\r\n        // 클라이언트\r\n        const updatedDaydoItemList = [...daydoItemList];\r\n\r\n        updatedDaydoItemList[index] = {\r\n            ...selectedItem,\r\n        };\r\n\r\n        setDaydoItemList(updatedDaydoItemList);\r\n\r\n        // 서버에서 다시 목록 가져오기\r\n        setFetched(false);\r\n    }\r\n\r\n    function handleFormInputChange(e) {\r\n        setFormInput(e.target.value);\r\n    }\r\n\r\n    function handleKeyPress(e) {\r\n        if(e.key === 'Enter') {\r\n            handleCreate();\r\n        }\r\n    }\r\n\r\n    function handleSlider(e) {\r\n        if(e.target.className === 'right') {\r\n            if(day === 7) {\r\n                setDay(1);\r\n            }\r\n            else {\r\n                setDay(day+1);\r\n            }\r\n        }\r\n        else {\r\n            if(day === 1) {\r\n                setDay(7);\r\n            }\r\n            else {\r\n                setDay(day-1);\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className=\"template-wrapper daydo-list-template-wrapper\">\r\n            <div className=\"daydo-title-wrapper\">\r\n                <DaydoSlider day={day} onSlide={handleSlider}></DaydoSlider>\r\n            </div>\r\n            <p></p>\r\n            <div className=\"daydo-list-wrapper\">\r\n                <DaydoItemList\r\n                    day={day}\r\n                    daydoList={daydoItemList}\r\n                    onRemove={handleRemove}\r\n                    onChange={handleDaydoInputChange}\r\n                />\r\n            </div>\r\n            <div className=\"daydo-form-wrapper\">\r\n                <DaydoForm\r\n                    value={formInput}\r\n                    onChange={handleFormInputChange}\r\n                    onCreate={handleCreate}\r\n                    onKeyPress={handleKeyPress}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DayDoListTemplate;","import './Preference.css';\r\n\r\nconst Preference = ({ darkTheme, onToggle }) => {    \r\n    return (\r\n        <div className=\"template-wrapper preference-template-wrapper\">\r\n            <div className=\"title\">\r\n                <h2>기본 설정</h2>\r\n                <p></p>\r\n            </div>\r\n            <div className=\"content\">\r\n                <ul className=\"general\">\r\n                    <li className=\"theme\">\r\n                        <span className=\"text\">다크 모드</span>\r\n                        <label className=\"switch\">\r\n                            <input type=\"checkbox\" checked={darkTheme} name=\"theme\" onChange={onToggle}></input>\r\n                            <span className=\"slider round\"></span>\r\n                        </label>\r\n                        <p style={{ color : 'gray', border : 'none', width : '100%', marginTop : '5%'}}>밤에는 다크 모드를 켜는 것을 추천드려요.</p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Preference;","import DayDoListTemplate from './daydo/DaydoListTemplate';\r\nimport Preference from './preference/Preference';\r\n\r\nfunction PreferenceWrapper({ idToken, darkTheme, handleThemeToggle }) {\r\n  return (\r\n    <div className=\"preference-wrapper\">\r\n    <div className=\"component\">\r\n        <h1 style={{ fontSize : '3rem'}}>설정</h1>\r\n        <p>요일별 할 일 설정</p>\r\n        <DayDoListTemplate idToken={idToken} darkTheme={darkTheme}></DayDoListTemplate>\r\n        <p style={{ color : \"gray\" }}>요일별로 할 일을 설정하면<br></br> 해당 요일에 자동으로 할 일이 갱신됩니다!</p>\r\n    </div>\r\n    <div className=\"component\"> \r\n      <Preference darkTheme={darkTheme} onToggle={handleThemeToggle}></Preference>\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default PreferenceWrapper;","import './TodoForm.css';\r\n\r\nconst TodoForm = ({value, onChange, onCreate, onKeyPress}) => {\r\n    return (\r\n        <div className=\"todo-form\">\r\n            <span>+</span>           \r\n            <input type=\"text\" value={value} onChange={onChange} onKeyPress={onKeyPress} placeholder=\"할 일 적기\"/>\r\n            <button onClick={onCreate}>추가</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoForm;","import './TodoItem.css';\r\n\r\nconst TodoItem = ({ id, content, isDone, onRemove, onChange, onToggle}) => {\r\n    return (\r\n        <li className=\"todo-item\">\r\n            <input id={id} type=\"checkbox\" checked={isDone} onChange={() => { onToggle(id) }}></input>\r\n            <label htmlFor={id}></label>\r\n            <input type=\"text\" className={`todo-content ${isDone ? ('checked') : ('')}`} value={content} onChange={(e) => { onChange(e, id) }}/>\r\n            <span className=\"remove-item\" onClick={(e) => { e.stopPropagation(); onRemove(id); }}>&times;</span>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default TodoItem;","import TodoItem from './TodoItem';\r\nimport './TodoItemList.css';\r\n\r\nconst TodoItemList = ({ todoList, onRemove, onChange, onToggle }) => {\r\n    let todoListHTML;\r\n\r\n    if(todoList.length === 0) {\r\n        todoListHTML = <div className=\"todo-empty-list\">새 할 일을 적어주세요!</div>\r\n    }\r\n    else {\r\n        todoListHTML = todoList.map(\r\n            ({id, content, isDone}) => {\r\n                return <TodoItem\r\n                    key={id}\r\n                    id={id}\r\n                    content={content}\r\n                    isDone={isDone}\r\n                    onRemove={onRemove}\r\n                    onChange={onChange}\r\n                    onToggle={onToggle}\r\n                />\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <ul className=\"todo-list-wrapper\">\r\n            {todoListHTML}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default TodoItemList;","import { useEffect, useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport TodoItemList from './TodoItemList';\r\nimport './TodoListTemplate.css';\r\n\r\nconst TodoListTemplate = ({ idToken, darkTheme }) => {\r\n    const [ todoItemList, setTodoItemList ] = useState([]);\r\n    const [ formInput, setFormInput ] = useState('');\r\n    const [ fetched, setFetched ] = useState(false);\r\n\r\n    useEffect(() => { // 다크 모드 \r\n        console.log()\r\n        const inputs = document.querySelectorAll('input');\r\n    \r\n        if(darkTheme) {  \r\n          inputs.forEach(input => input.classList.add('dark'));\r\n        }\r\n        else {\r\n          inputs.forEach(input => input.classList.remove('dark'));\r\n        }\r\n    });\r\n\r\n    // FETCH - POST\r\n    useEffect(() => {\r\n        //첫 로딩시에만 서버로부터 Todo 목록 가져오기\r\n        if(!fetched) {\r\n            fetch('http://ec2-3-36-251-188.ap-northeast-2.compute.amazonaws.com:8080/api/todos', {\r\n                method : 'POST',\r\n                headers : {\r\n                    'content-type' : 'application/json'\r\n                },\r\n                body : JSON.stringify(idToken)\r\n            })\r\n            .then((response) => response.json())\r\n            .then((items) => {\r\n                console.log(\"서버로부터 Todo 목록 가져옴: \", items);\r\n                setTodoItemList(items);\r\n                setFetched(true);\r\n            });\r\n        }\r\n    }, [fetched]);\r\n\r\n    // CREATE - POST \r\n    function handleCreate() {\r\n        // Form 안의 내용을 초기화\r\n        setFormInput('');\r\n\r\n        // 서버로 보낼 객체 아이템 생성\r\n        const newTodoItem = {\r\n            token: idToken,\r\n            content: formInput,\r\n            isDone: false\r\n        };\r\n        \r\n        // POST 방식으로 서버 전송\r\n        fetch('http://ec2-3-36-251-188.ap-northeast-2.compute.amazonaws.com:8080/api/todo', {\r\n            method : 'POST',\r\n            headers: {\r\n                'content-type' : 'application/json'\r\n            },\r\n            body : JSON.stringify(newTodoItem)\r\n        }) // 서버에서 받은 응답을 객체화 후, TodoItemList에 추가 (컴포넌트 re-render됨)\r\n        .then((response) => response.json())\r\n        .then((newTodoItem) => {\r\n            console.log(\"새 Todo 아이템 생성됨: \", newTodoItem);\r\n             setTodoItemList([...todoItemList, newTodoItem]);\r\n         })\r\n    }\r\n    \r\n    // REMOVE - DELETE\r\n    function handleRemove(id) {\r\n        // 서버와 클라이언트 따로따로 처리됨\r\n        const updatedTodoItemList = todoItemList.filter(todoItem => todoItem.id !== id);\r\n\r\n        //서버\r\n        fetch(`http://ec2-3-36-251-188.ap-northeast-2.compute.amazonaws.com:8080/api/todo/${id}`, {\r\n            method: 'DELETE',\r\n            headers : {\r\n                'content-type' : 'application/json'\r\n            }           \r\n        })\r\n        .then((response) => response.json())\r\n        .then((deletedId) => {\r\n            console.log(\"ID:\", deletedId, \" 삭제됨\");\r\n        });\r\n\r\n        //클라이언트\r\n        setTodoItemList(updatedTodoItemList);\r\n    }\r\n  \r\n    // UPDATE (content) - PUT\r\n    function handleTodoInputChange(e, id) {\r\n        // 서버와 클라이언트 따로따로 처리됨\r\n        const index = todoItemList.findIndex(todoItem => todoItem.id === id);\r\n        const selectedItem = todoItemList[index];\r\n        selectedItem.content = e.target.value;\r\n\r\n        // 서버\r\n        fetch(`http://ec2-3-36-251-188.ap-northeast-2.compute.amazonaws.com:8080/api/todo/${id}`, {\r\n            method : 'PUT',\r\n            headers : {\r\n                'content-type' : 'application/json'\r\n            },\r\n            body : JSON.stringify(selectedItem)\r\n        })\r\n        .then((response) => response.json())\r\n        .then((updatedId) => {\r\n            console.log(\"ID:\", updatedId, \" 업데이트됨\");\r\n        });\r\n\r\n        // 클라이언트\r\n        const updatedTodoItemList = [...todoItemList];\r\n\r\n        updatedTodoItemList[index] = {\r\n            ...selectedItem,\r\n        };\r\n\r\n        setTodoItemList(updatedTodoItemList);\r\n    }\r\n    \r\n    // UPDATE (isDone) - PUT\r\n    function handleToggle(id) {\r\n        // 서버와 클라이언트 따로따로 처리됨\r\n        const index = todoItemList.findIndex(todoItem => todoItem.id === id);\r\n        const selectedItem = todoItemList[index];\r\n        selectedItem.isDone = !selectedItem.isDone;\r\n\r\n        // 서버\r\n        fetch(`http://ec2-3-36-251-188.ap-northeast-2.compute.amazonaws.com:8080/api/todo/${id}`, {\r\n            method : 'PUT',\r\n            headers : {\r\n                'content-type' : 'application/json'\r\n            },\r\n            body : JSON.stringify(selectedItem)\r\n        })\r\n        .then((response) => response.json())\r\n        .then((updatedId) => {\r\n            console.log(\"ID:\", updatedId, \" 업데이트됨\");\r\n        });\r\n\r\n        // 클라이언트\r\n        const updatedTodoItemList = [...todoItemList];\r\n\r\n        updatedTodoItemList[index] = {\r\n            ...selectedItem\r\n        };\r\n\r\n        setTodoItemList(updatedTodoItemList);       \r\n    }\r\n\r\n    function handleFormInputChange(e) {\r\n        setFormInput(e.target.value);\r\n    }\r\n\r\n    function handleKeyPress(e) {\r\n        if(e.key === 'Enter') {\r\n            handleCreate();\r\n        }\r\n    }\r\n  \r\n\r\n    return (\r\n        <div className=\"template-wrapper todo-list-template-wrapper\">\r\n            <div className=\"todo-title\">\r\n                <h2>목록</h2>\r\n                <p></p>\r\n            </div>\r\n            <div className=\"todo-lists-wrapper\">\r\n                <TodoItemList\r\n                    todoList={todoItemList}\r\n                    onRemove={handleRemove}\r\n                    onChange={handleTodoInputChange}\r\n                    onToggle={handleToggle}\r\n                />\r\n            </div>\r\n            <div className=\"todo-form-wrapper\">\r\n                <TodoForm\r\n                    value={formInput}\r\n                    onChange={handleFormInputChange}\r\n                    onCreate={handleCreate}\r\n                    onKeyPress={handleKeyPress}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoListTemplate;","import TodoListTemplate from './todo/TodoListTemplate';\r\n\r\nfunction TodayWrapper({ idToken, darkTheme, todayDateHTML }) {\r\n    return (\r\n    <div className=\"component\">\r\n        <h1 style={{ fontSize : '3rem'}}>오늘 할 일은?</h1>\r\n        {todayDateHTML}\r\n        <TodoListTemplate idToken={idToken} darkTheme={darkTheme}></TodoListTemplate>\r\n        <p style={{ color : \"gray\" }}>요일별로 할 일이 자동으로 갱신됩니다!</p>\r\n    </div>\r\n    );\r\n  }\r\n  \r\n  export default TodayWrapper;","import { useEffect, useState } from 'react';\r\nimport Footer from './components/fixed/Footer';\r\nimport Navigation from './components/fixed/Navigation';\r\nimport PreferenceWrapper from './components/PreferenceWrapper';\r\nimport TodayWrapper from './components/TodayWrapper';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  const today = new Date();\r\n  const dayname = ['일','월','화','수','목','금','토','일'];       \r\n  const todayDateHTML = <p>오늘은 <br></br> {today.getMonth()+1}월 {today.getDate()}일 {dayname[today.getDay()]}요일</p>;\r\n\r\n  const [ darkTheme, setDarkTheme ] = useState(false); // 다크 모드\r\n  //const [ selectedPageNum, setSelectedPageNum ] = useState(0); // 기본값: 오늘 할 일 (0)\r\n\r\n  useEffect(() => { // 랜더링 이후 다크 모드 설정 (추후 리팩토링)\r\n    const body = document.querySelector('body');\r\n    const navigation = document.querySelector('.navigation');\r\n    const footer = document.querySelector('.footer');\r\n\r\n    if(darkTheme) {  \r\n      body.classList.add('dark');\r\n      navigation.classList.add('dark');\r\n      footer.classList.add('dark');\r\n    }\r\n    else {\r\n      body.classList.remove('dark');\r\n      navigation.classList.remove('dark');\r\n      footer.classList.remove('dark');\r\n    }\r\n  }, [ darkTheme ]);\r\n\r\n  function handleThemeToggle() {\r\n    setDarkTheme(!darkTheme);\r\n  }\r\n\r\n  const [isPatched, setIsPatched] = useState(false);\r\n  const [userInfo, setUserInfo] = useState(\"\");\r\n  const idToken = document.cookie.split('; ').find(row => row.startsWith('idToken')).split('=')[1];\r\n  \r\n  // Read\r\n  useEffect(() => {\r\n      if (!isPatched) {\r\n          // GET 방식으로 서버 전송\r\n          fetch('http://ec2-3-36-251-188.ap-northeast-2.compute.amazonaws.com:8080/api/user', {\r\n              method: 'POST',\r\n              headers: {\r\n                  'content-type': 'application/json'\r\n              },\r\n              body: JSON.stringify(idToken)\r\n          })\r\n              .then((response) => response.json())\r\n              .then((newUserInfo) => {\r\n                  console.log(\"유저 정보 가져옴: \", { newUserInfo });\r\n                  setUserInfo(newUserInfo);\r\n              });\r\n\r\n          setIsPatched(true);\r\n      }\r\n  }, [isPatched]);\r\n  \r\n  // 메인\r\n  return (\r\n    <Router basename=\"/dailydo\">\r\n      <div className=\"main\">\r\n        <Navigation userInfo={userInfo}></Navigation>\r\n        <Switch>\r\n          <Route path={'/'} exact render={() => <TodayWrapper idToken={idToken} darkTheme={darkTheme} todayDateHTML={todayDateHTML}/>}/>\r\n          <Route path={'/preference'} render={() => <PreferenceWrapper idToken={idToken} darkTheme={darkTheme} handleThemeToggle={handleThemeToggle}/>}/>\r\n        </Switch>\r\n        <Footer></Footer>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}